"""Create agents and subscriptions

Revision ID: 52e4c9d4a997
Revises: a10a2f472824
Create Date: 2025-05-16 14:19:25.433332

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "52e4c9d4a997"
down_revision: Union[str, None] = "a10a2f472824"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "subscriptions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_address", sa.String(), nullable=False),
        sa.Column("subscription_type", sa.Enum("agent", name="subscriptiontype"), nullable=False),
        sa.Column("amount", sa.Float(), nullable=False),
        sa.Column("last_charged_at", sa.TIMESTAMP(), nullable=False),
        sa.Column("next_charge_at", sa.TIMESTAMP(), nullable=False),
        sa.Column("status", sa.Enum("active", "paused", "cancelled", name="subscriptionstatus"), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
        sa.Column("related_id", sa.UUID(), nullable=False),
        sa.CheckConstraint("amount >= 0", name="check_subscription_amount_non_negative"),
        sa.ForeignKeyConstraint(["user_address"], ["users.address"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "agents",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("secret", sa.String(), nullable=False),
        sa.Column("instance_hash", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("user_address", sa.String(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
        sa.Column("ssh_public_key", sa.String(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("subscription_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["subscription_id"],
            ["subscriptions.id"],
        ),
        sa.ForeignKeyConstraint(["user_address"], ["users.address"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("secret"),
    )
    op.create_index(op.f("ix_agents_instance_hash"), "agents", ["instance_hash"], unique=True)
    op.create_table(
        "subscription_transactions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("subscription_id", sa.UUID(), nullable=False),
        sa.Column("amount", sa.Float(), nullable=False),
        sa.Column("status", sa.Enum("success", "failed", name="subscriptiontransactionstatus"), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
        sa.Column("notes", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(["subscription_id"], ["subscriptions.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "credit_transactions",
        "status",
        existing_type=sa.Enum("pending", "completed", name="credittransactionstatus"),
        type_=postgresql.ENUM("pending", "completed", name="transactionstatus"),
        existing_nullable=False,
    )
    op.alter_column(
        "credit_transactions",
        "provider",
        existing_type=sa.Enum("libertai", "thirdweb", "voucher", name="credittransactionprovider"),
        type_=postgresql.ENUM("libertai", "thirdweb", "voucher", name="transactionprovider"),
        existing_nullable=False,
    )
    op.drop_table("subscription_transactions")
    op.drop_index(op.f("ix_agents_instance_hash"), table_name="agents")
    op.drop_table("agents")
    op.drop_table("subscriptions")
    # ### end Alembic commands ###
